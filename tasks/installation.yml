---

- name: detect installed icingadb
  block:

    - name: detect if icingadb exists
      stat:
        path: /usr/sbin/icingadb
      register: icingadb_binary_file

    - name: define icingadb_installed
      set_fact:
        icingadb_installed: "{{ icingadb_binary_file.stat.exists }}"

- name: archlinux
  block:
    - name: install icingadb package via aur
      become: true
      become_user: aur_builder
      aur:
        state: present
        name: icingadb
        repository: "{{ icingadb_repo_archlinux }}"
  when:
    - ansible_os_family | lower == 'archlinux' or
      ansible_distribution | lower | replace(' ', '') == 'artixlinux'

- name: openrc
  block:
    - name: create conf.d/icingadb
      template:
        src: init/openrc/conf.d/icingadb.j2
        dest: /etc/conf.d/icingadb
        mode: 0644

    - name: create init.d/icingadb
      template:
        src: init/openrc/init.d/icingadb.j2
        dest: /etc/init.d/icingadb
        mode: 0755
  when:
    - ansible_service_mgr == 'openrc'

- name: debian
  block:
    - name: create policy-rc.d
      copy:
        dest: /usr/sbin/policy-rc.d
        content: |
          #!/bin/sh
          exit 101
        mode: 0755

    - name: install icingadb packages
      package:
        name: "{{ icingadb_packages }}"
        state: present
      register: icingadb_installer

    - name: do facts module to get latest information
      setup:

    - name: remove policy-rc.d
      file:
        path: /usr/sbin/policy-rc.d
        state: absent
  when:
    - not icingadb_installed
    - not ansible_os_family | lower == 'archlinux' or
      not ansible_distribution | lower | replace(' ', '') == 'artixlinux'

- name: re-read ansible facts
  setup:

...
